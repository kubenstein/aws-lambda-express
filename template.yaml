AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  MyDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MyTable
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: S
      KeySchema:
        - AttributeName: ID
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  ApiGatewayFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                Resource: !GetAtt MyDynamoDBTable.Arn

  ApiGatewayFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt ApiGatewayFunctionRole.Arn
      CodeUri: ./
      Handler: lambda-entry-point.handler
      Runtime: nodejs18.x
      Environment:
        Variables:
          LAMBDA_ENV: "prod"
      Events:
        HttpRootEntryPoint:
          Type: Api
          Properties:
            Path: /
            Method: ANY
        HttpWildCardEntryPoint:
          Type: Api
          Properties:
            Path: /{path+}
            Method: ANY
